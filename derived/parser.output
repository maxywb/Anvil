Terminals unused in grammar

   MINUS
   DIVIDE
   MODULO
   GT
   GT_EQ
   LT_EQ
   EQUAL
   NE
   XOR
   OR
   AND
   SHIFT_RIGHT
   SHIFT_LEFT
   DOT
   BREAK
   RETURN
   LS
   RS


State 48 conflicts: 4 shift/reduce


Grammar

    0 $accept: top $end

    1 top: statement_list

    2 statement_list: statement statement_list
    3               | statement

    4 statement: expression SEMI
    5          | function_definition
    6          | conditional
    7          | loop
    8          | SEMI

    9 conditional: if_branch elif_list else_branch
   10            | if_branch
   11            | if_branch else_branch

   12 if_branch: IF LP expression RP LC statement_list RC

   13 elif_branch: ELIF LP expression RP LC statement_list RC

   14 else_branch: ELSE LC statement_list RC

   15 elif_list: elif_branch elif_list
   16          | elif_branch

   17 expression: expression COMMA expression
   18           | literal
   19           | expression ADD expression
   20           | expression MULTIPLY expression
   21           | expression LT expression
   22           | LP expression RP
   23           | function_call
   24           | assignment
   25           | ID

   26 literal: NUM

   27 function_call: ID LP RP
   28              | ID LP expression RP

   29 assignment: ID ASSIGN expression

   30 function_definition: DEF ID LP function_parameters RP LC statement_list RC

   31 function_parameters: ID COMMA function_parameters
   32                    | ID

   33 loop: for_loop
   34     | while_loop

   35 for_loop: FOR LP expression SEMI expression SEMI expression RP LC statement_list RC

   36 while_loop: WHILE LP expression RP LC statement_list RC


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 19
MINUS (259)
MULTIPLY (260) 20
DIVIDE (261)
MODULO (262)
GT (263)
LT (264) 21
GT_EQ (265)
LT_EQ (266)
EQUAL (267)
NE (268)
XOR (269)
OR (270)
AND (271)
SHIFT_RIGHT (272)
SHIFT_LEFT (273)
DOT (274)
LC (275) 12 13 14 30 35 36
RC (276) 12 13 14 30 35 36
LP (277) 12 13 22 27 28 30 35 36
RP (278) 12 13 22 27 28 30 35 36
SEMI (279) 4 8 35
COMMA (280) 17 31
ASSIGN (281) 29
DEF (282) 30
IF (283) 12
ELSE (284) 14
ELIF (285) 13
FOR (286) 35
WHILE (287) 36
BREAK (288)
RETURN (289)
LS (290)
RS (291)
ID (292) 25 27 28 29 30 31 32
NUM (293) 26


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
top (40)
    on left: 1, on right: 0
statement_list (41)
    on left: 2 3, on right: 1 2 12 13 14 30 35 36
statement (42)
    on left: 4 5 6 7 8, on right: 2 3
conditional (43)
    on left: 9 10 11, on right: 6
if_branch (44)
    on left: 12, on right: 9 10 11
elif_branch (45)
    on left: 13, on right: 15 16
else_branch (46)
    on left: 14, on right: 9 11
elif_list (47)
    on left: 15 16, on right: 9 15
expression (48)
    on left: 17 18 19 20 21 22 23 24 25, on right: 4 12 13 17 19 20
    21 22 28 29 35 36
literal (49)
    on left: 26, on right: 18
function_call (50)
    on left: 27 28, on right: 23
assignment (51)
    on left: 29, on right: 24
function_definition (52)
    on left: 30, on right: 5
function_parameters (53)
    on left: 31 32, on right: 30 31
loop (54)
    on left: 33 34, on right: 7
for_loop (55)
    on left: 35, on right: 33
while_loop (56)
    on left: 36, on right: 34


state 0

    0 $accept: . top $end

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    top                  go to state 9
    statement_list       go to state 10
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 1

   22 expression: LP . expression RP

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 22
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 2

    8 statement: SEMI .

    $default  reduce using rule 8 (statement)


state 3

   30 function_definition: DEF . ID LP function_parameters RP LC statement_list RC

    ID  shift, and go to state 23


state 4

   12 if_branch: IF . LP expression RP LC statement_list RC

    LP  shift, and go to state 24


state 5

   35 for_loop: FOR . LP expression SEMI expression SEMI expression RP LC statement_list RC

    LP  shift, and go to state 25


state 6

   36 while_loop: WHILE . LP expression RP LC statement_list RC

    LP  shift, and go to state 26


state 7

   25 expression: ID .
   27 function_call: ID . LP RP
   28              | ID . LP expression RP
   29 assignment: ID . ASSIGN expression

    LP      shift, and go to state 27
    ASSIGN  shift, and go to state 28

    $default  reduce using rule 25 (expression)


state 8

   26 literal: NUM .

    $default  reduce using rule 26 (literal)


state 9

    0 $accept: top . $end

    $end  shift, and go to state 29


state 10

    1 top: statement_list .

    $default  reduce using rule 1 (top)


state 11

    2 statement_list: statement . statement_list
    3               | statement .

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    $default  reduce using rule 3 (statement_list)

    statement_list       go to state 30
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 12

    6 statement: conditional .

    $default  reduce using rule 6 (statement)


state 13

    9 conditional: if_branch . elif_list else_branch
   10            | if_branch .
   11            | if_branch . else_branch

    ELSE  shift, and go to state 31
    ELIF  shift, and go to state 32

    $default  reduce using rule 10 (conditional)

    elif_branch  go to state 33
    else_branch  go to state 34
    elif_list    go to state 35


state 14

    4 statement: expression . SEMI
   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    SEMI      shift, and go to state 39
    COMMA     shift, and go to state 40


state 15

   18 expression: literal .

    $default  reduce using rule 18 (expression)


state 16

   23 expression: function_call .

    $default  reduce using rule 23 (expression)


state 17

   24 expression: assignment .

    $default  reduce using rule 24 (expression)


state 18

    5 statement: function_definition .

    $default  reduce using rule 5 (statement)


state 19

    7 statement: loop .

    $default  reduce using rule 7 (statement)


state 20

   33 loop: for_loop .

    $default  reduce using rule 33 (loop)


state 21

   34 loop: while_loop .

    $default  reduce using rule 34 (loop)


state 22

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   22           | LP expression . RP

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 41
    COMMA     shift, and go to state 40


state 23

   30 function_definition: DEF ID . LP function_parameters RP LC statement_list RC

    LP  shift, and go to state 42


state 24

   12 if_branch: IF LP . expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 43
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 25

   35 for_loop: FOR LP . expression SEMI expression SEMI expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 44
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 26

   36 while_loop: WHILE LP . expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 45
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 27

   27 function_call: ID LP . RP
   28              | ID LP . expression RP

    LP   shift, and go to state 1
    RP   shift, and go to state 46
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 47
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 28

   29 assignment: ID ASSIGN . expression

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 48
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 29

    0 $accept: top $end .

    $default  accept


state 30

    2 statement_list: statement statement_list .

    $default  reduce using rule 2 (statement_list)


state 31

   14 else_branch: ELSE . LC statement_list RC

    LC  shift, and go to state 49


state 32

   13 elif_branch: ELIF . LP expression RP LC statement_list RC

    LP  shift, and go to state 50


state 33

   15 elif_list: elif_branch . elif_list
   16          | elif_branch .

    ELIF  shift, and go to state 32

    $default  reduce using rule 16 (elif_list)

    elif_branch  go to state 33
    elif_list    go to state 51


state 34

   11 conditional: if_branch else_branch .

    $default  reduce using rule 11 (conditional)


state 35

    9 conditional: if_branch elif_list . else_branch

    ELSE  shift, and go to state 31

    else_branch  go to state 52


state 36

   19 expression: expression ADD . expression

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 53
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 37

   20 expression: expression MULTIPLY . expression

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 54
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 38

   21 expression: expression LT . expression

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 55
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 39

    4 statement: expression SEMI .

    $default  reduce using rule 4 (statement)


state 40

   17 expression: expression COMMA . expression

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 56
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 41

   22 expression: LP expression RP .

    $default  reduce using rule 22 (expression)


state 42

   30 function_definition: DEF ID LP . function_parameters RP LC statement_list RC

    ID  shift, and go to state 57

    function_parameters  go to state 58


state 43

   12 if_branch: IF LP expression . RP LC statement_list RC
   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 59
    COMMA     shift, and go to state 40


state 44

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   35 for_loop: FOR LP expression . SEMI expression SEMI expression RP LC statement_list RC

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    SEMI      shift, and go to state 60
    COMMA     shift, and go to state 40


state 45

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   36 while_loop: WHILE LP expression . RP LC statement_list RC

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 61
    COMMA     shift, and go to state 40


state 46

   27 function_call: ID LP RP .

    $default  reduce using rule 27 (function_call)


state 47

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   28 function_call: ID LP expression . RP

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 62
    COMMA     shift, and go to state 40


state 48

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   29 assignment: ID ASSIGN expression .

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    COMMA     shift, and go to state 40

    ADD       [reduce using rule 29 (assignment)]
    MULTIPLY  [reduce using rule 29 (assignment)]
    LT        [reduce using rule 29 (assignment)]
    COMMA     [reduce using rule 29 (assignment)]
    $default  reduce using rule 29 (assignment)


state 49

   14 else_branch: ELSE LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 63
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 50

   13 elif_branch: ELIF LP . expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 64
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 51

   15 elif_list: elif_branch elif_list .

    $default  reduce using rule 15 (elif_list)


state 52

    9 conditional: if_branch elif_list else_branch .

    $default  reduce using rule 9 (conditional)


state 53

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   19           | expression ADD expression .
   20           | expression . MULTIPLY expression
   21           | expression . LT expression

    MULTIPLY  shift, and go to state 37
    COMMA     shift, and go to state 40

    $default  reduce using rule 19 (expression)


state 54

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   20           | expression MULTIPLY expression .
   21           | expression . LT expression

    COMMA  shift, and go to state 40

    $default  reduce using rule 20 (expression)


state 55

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   21           | expression LT expression .

    MULTIPLY  shift, and go to state 37
    COMMA     shift, and go to state 40

    $default  reduce using rule 21 (expression)


state 56

   17 expression: expression . COMMA expression
   17           | expression COMMA expression .
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression

    $default  reduce using rule 17 (expression)


state 57

   31 function_parameters: ID . COMMA function_parameters
   32                    | ID .

    COMMA  shift, and go to state 65

    $default  reduce using rule 32 (function_parameters)


state 58

   30 function_definition: DEF ID LP function_parameters . RP LC statement_list RC

    RP  shift, and go to state 66


state 59

   12 if_branch: IF LP expression RP . LC statement_list RC

    LC  shift, and go to state 67


state 60

   35 for_loop: FOR LP expression SEMI . expression SEMI expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 68
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 61

   36 while_loop: WHILE LP expression RP . LC statement_list RC

    LC  shift, and go to state 69


state 62

   28 function_call: ID LP expression RP .

    $default  reduce using rule 28 (function_call)


state 63

   14 else_branch: ELSE LC statement_list . RC

    RC  shift, and go to state 70


state 64

   13 elif_branch: ELIF LP expression . RP LC statement_list RC
   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 71
    COMMA     shift, and go to state 40


state 65

   31 function_parameters: ID COMMA . function_parameters

    ID  shift, and go to state 57

    function_parameters  go to state 72


state 66

   30 function_definition: DEF ID LP function_parameters RP . LC statement_list RC

    LC  shift, and go to state 73


state 67

   12 if_branch: IF LP expression RP LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 74
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 68

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   35 for_loop: FOR LP expression SEMI expression . SEMI expression RP LC statement_list RC

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    SEMI      shift, and go to state 75
    COMMA     shift, and go to state 40


state 69

   36 while_loop: WHILE LP expression RP LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 76
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 70

   14 else_branch: ELSE LC statement_list RC .

    $default  reduce using rule 14 (else_branch)


state 71

   13 elif_branch: ELIF LP expression RP . LC statement_list RC

    LC  shift, and go to state 77


state 72

   31 function_parameters: ID COMMA function_parameters .

    $default  reduce using rule 31 (function_parameters)


state 73

   30 function_definition: DEF ID LP function_parameters RP LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 78
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 74

   12 if_branch: IF LP expression RP LC statement_list . RC

    RC  shift, and go to state 79


state 75

   35 for_loop: FOR LP expression SEMI expression SEMI . expression RP LC statement_list RC

    LP   shift, and go to state 1
    ID   shift, and go to state 7
    NUM  shift, and go to state 8

    expression     go to state 80
    literal        go to state 15
    function_call  go to state 16
    assignment     go to state 17


state 76

   36 while_loop: WHILE LP expression RP LC statement_list . RC

    RC  shift, and go to state 81


state 77

   13 elif_branch: ELIF LP expression RP LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 82
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 78

   30 function_definition: DEF ID LP function_parameters RP LC statement_list . RC

    RC  shift, and go to state 83


state 79

   12 if_branch: IF LP expression RP LC statement_list RC .

    $default  reduce using rule 12 (if_branch)


state 80

   17 expression: expression . COMMA expression
   19           | expression . ADD expression
   20           | expression . MULTIPLY expression
   21           | expression . LT expression
   35 for_loop: FOR LP expression SEMI expression SEMI expression . RP LC statement_list RC

    ADD       shift, and go to state 36
    MULTIPLY  shift, and go to state 37
    LT        shift, and go to state 38
    RP        shift, and go to state 84
    COMMA     shift, and go to state 40


state 81

   36 while_loop: WHILE LP expression RP LC statement_list RC .

    $default  reduce using rule 36 (while_loop)


state 82

   13 elif_branch: ELIF LP expression RP LC statement_list . RC

    RC  shift, and go to state 85


state 83

   30 function_definition: DEF ID LP function_parameters RP LC statement_list RC .

    $default  reduce using rule 30 (function_definition)


state 84

   35 for_loop: FOR LP expression SEMI expression SEMI expression RP . LC statement_list RC

    LC  shift, and go to state 86


state 85

   13 elif_branch: ELIF LP expression RP LC statement_list RC .

    $default  reduce using rule 13 (elif_branch)


state 86

   35 for_loop: FOR LP expression SEMI expression SEMI expression RP LC . statement_list RC

    LP     shift, and go to state 1
    SEMI   shift, and go to state 2
    DEF    shift, and go to state 3
    IF     shift, and go to state 4
    FOR    shift, and go to state 5
    WHILE  shift, and go to state 6
    ID     shift, and go to state 7
    NUM    shift, and go to state 8

    statement_list       go to state 87
    statement            go to state 11
    conditional          go to state 12
    if_branch            go to state 13
    expression           go to state 14
    literal              go to state 15
    function_call        go to state 16
    assignment           go to state 17
    function_definition  go to state 18
    loop                 go to state 19
    for_loop             go to state 20
    while_loop           go to state 21


state 87

   35 for_loop: FOR LP expression SEMI expression SEMI expression RP LC statement_list . RC

    RC  shift, and go to state 88


state 88

   35 for_loop: FOR LP expression SEMI expression SEMI expression RP LC statement_list RC .

    $default  reduce using rule 35 (for_loop)
